{"version":3,"file":"static/js/514.2e6d7df1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/hw-03-image-finder/components/styles/Button.module.css?5112","hw-03-image-finder/components/Button.jsx","hw-03-image-finder/components/Loader.jsx","webpack://react-homework-template/./src/hw-03-image-finder/components/styles/Searchbar.module.css?9da8","hw-03-image-finder/components/Searchbar.jsx","hw-05-movies/pages/Movies.js","hw-05-movies/pages/components/GalleryCard.jsx","hw-05-movies/pages/components/MovieGallery.jsx","hw-05-movies/pages/fetch_functions.js","webpack://react-homework-template/./src/hw-03-image-finder/components/styles/ImageGallery.module.css?0ba8","webpack://react-homework-template/./src/hw-03-image-finder/components/styles/ImageGalleryItem.module.css?9b3f"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__-2+Jp\"};","import styles from \"./styles/Button.module.css\"\nexport const LoadButton = ({LoadMoreFunc}) => {\n    return (\n    <button \n        className={styles.Button}\n        onClick={()=>LoadMoreFunc()}\n    >\n        Load more\n    </button>\n)}","export const Loader = ()=>(\n    <div>\n        Loading...\n    </div>\n)","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__QO6eC\",\"SearchForm\":\"Searchbar_SearchForm__PF2QQ\",\"SearchForm-button\":\"Searchbar_SearchForm-button__D0+UF\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__r6gUN\",\"SearchForm-input\":\"Searchbar_SearchForm-input__e3atQ\"};","import styles from './styles/Searchbar.module.css'\nexport const Searchbar = ({submitFunc}) => (\n    <header className={styles[\"Searchbar\"]}>\n    <form onSubmit={e=>{\n        e.preventDefault();\n        submitFunc(e.target.elements.t3Filter.value)\n        }}\n        className={styles[\"SearchForm\"]}>\n      <button type=\"submit\" className={styles[\"SearchForm-button\"]}>\n        <span className={styles[\"SearchForm-button-label\"]}>Search</span>\n      </button>\n  \n      <input\n        className={styles[\"SearchForm-input\"]}\n         id='t3Filter'\n        name=\"t3Filter\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n      />\n    </form>\n  </header>\n)","import React, { useEffect, useState } from 'react'\nimport { getSearchMovies as sendRequest} from './fetch_functions';\nimport Section from 'generalComponents/Section';\nimport Notification from 'generalComponents/Notification';\n\nimport { Searchbar } from 'hw-03-image-finder/components/Searchbar';\nimport { LoadButton } from 'hw-03-image-finder/components/Button';\nimport MovieGallery from './components/MovieGallery';\nimport { useSearchParams } from 'react-router-dom';\n\n//this is mostly unmodified (except responce fields and components) Gallery application from past tasks. \n//All the naming reflect image gallery, despite this component is being a movie gallery\n\nexport default function Movies() {\n  const [imageList,setImageList]=useState([]);   \n    function updateImageList(newItems=[]){setImageList((prevState)=>[...prevState,...newItems]);}\n  const [filter,setFilter]=useState('');\n  const [pageNum,setPageNum]=useState(1);\n  const [isLoading,setIsLoading]=useState(false);//loading//updating//false\n  const [isMoreAvailible,setIsMoreAvailible]=useState(false);//true/false\n  const [error,setError]=useState(null);\n  const [searchParams,setSearchParams]=useSearchParams();\n\n  function newFilter(newFilter=''){\n    setFilter(newFilter);\n    setSearchParams({query:newFilter});\n    if (!newFilter) return\n    setIsLoading('loading');\n    setPageNum(1);\n    setError(null);\n    setIsMoreAvailible(false);\n\n    sendRequest(newFilter).then(response=>{\n      setImageList(response.results);\n      setIsMoreAvailible(response.total_pages>1);\n    }).catch(err=>\n      setError(err)\n    ).finally(\n      setIsLoading(false)\n    );\n  };\n  useEffect(()=>{\n    const query=searchParams.get(\"query\");\n    if(query) newFilter(query);\n    // eslint-disable-next-line\n  },[])\n\n  function loadMore(){\n    let newPageNum=pageNum+1;// this is to prevent request from executing before or after setState occurs\n    setPageNum(newPageNum);\n    setIsLoading('updating');\n    setError(null);\n    setIsMoreAvailible(false);\n\n    sendRequest(filter,newPageNum).then(response=>{\n      updateImageList(response.results);\n      setIsMoreAvailible(response.total_pages>newPageNum);\n    }).catch(err=>\n      setError(err)\n    ).finally(\n      setIsLoading(false)\n    );\n  }\n  \n  if (error) {\n    console.log(error)\n    return <Notification message=\"something went wrong, please try again\"/>\n  }\n  if (!filter) return(\n    <Section>\n      <Searchbar submitFunc={newFilter}/>\n    </Section>\n  )\n  return (\n    <Section>\n      <Searchbar submitFunc={newFilter}/>\n      <MovieGallery items={imageList} isLoading={isLoading}/>\n      {isMoreAvailible?\n        <LoadButton LoadMoreFunc={loadMore} />\n      :''}\n    </Section>\n  )\n}","import styles from 'hw-03-image-finder/components/styles/ImageGalleryItem.module.css'\n\nexport default function GalleryCard({image='',label='',onClickF=function(){},alternative=''}) {\n  return (\n    <div className={styles[\"ImageGalleryItem\"]} onClick={()=>onClickF()}>\n        <img className={styles[\"ImageGalleryItem-image\"]} src={image} alt={alternative} />\n        <div>{label}</div>\n    </div>\n  )\n}","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport Section from 'generalComponents/Section'\nimport Notification from 'generalComponents/Notification'\nimport { Loader } from 'hw-03-image-finder/components/Loader'\nimport GalleryCard from './GalleryCard'\n\nimport styles from 'hw-03-image-finder/components/styles/ImageGallery.module.css'\n\nfunction MovieGallery({items,isLoading}) {    \n    const navigate=useNavigate();\n    \n    if (isLoading==='loading') return <Loader/>\n    if (items.length===0) return <Notification message='Sorry, no movies matched your criteria'/>\n\n    function onClickHandler(movieID){\n        console.log(movieID);\n        return navigate(`../movies/${movieID}`);\n    }\n    return (\n    <Section>\n        <ul className={styles['ImageGallery']}>\n            {items.map(({id,original_title,poster_path})=>(\n                <GalleryCard key={id} image={poster_path?('https://image.tmdb.org/t/p/original'+poster_path):''} label={original_title} onClickF={()=>onClickHandler(id)}/>\n            ))}\n        </ul>\n        {isLoading==='updating'?(\n                <Loader/>\n        ):''}\n    </Section>\n    )\n}\n\nMovieGallery.propTypes = {\n    items:PropTypes.arrayOf(\n        PropTypes.shape({\n            // id:PropTypes.any.isRequired,\n            // webformatURL:PropTypes.string,\n            // largeImageURL:PropTypes.string\n        })\n    ),\n    isLoading:PropTypes.oneOf(['loading','updating',false])\n}\n\nexport default MovieGallery\n\n// import React, { Component } from 'react'\n// import Notification from 'generalComponents/Notification'\n// import {ImageGalleryItem} from './ImageGalleryItem'\n// import { Loader } from './Loader'\n// import PropTypes from 'prop-types'\n// import { Modal } from './Modal'\n// import styles from './styles/ImageGallery.module.css'\n\n\n// export default class ImageGallery extends Component {\n//  \n//   state={\n//     modal:''\n//   }\n//   render() {\n//     if (this.props.isLoading==='loading') return <Loader/>\n//     if (this.props.items.length===0) return <Notification message='Sorry, no images matched your search'/>\n//     return (\n//         <div>\n//         {this.state.modal?<Modal imgSrc={this.state.modal} onAbortF={()=>this.setState({modal:''})}/>:''}\n//         <ul className={styles['ImageGallery']}>\n//             {this.props.items.map((item)=>(\n//                 <ImageGalleryItem key={item.id} item={item} onClickF={(url)=>this.setState({modal:url})}/>\n//             ))}\n//         </ul>\n//         {this.props.isLoading==='updating'?(\n//                 <Loader/>\n//         ):''}\n//     </div>\n//     )\n//   }\n// }\n\n","function actually_send_get_request(RelativeURL){\n    let querySymbol='?'\n    if (RelativeURL.indexOf('?')!==-1) querySymbol='&'\n\n    const fullURL=baseURL()+RelativeURL+querySymbol+'api_key='+api_key();\n\n    return new Promise((resolve,reject)=>{\n        fetch(fullURL).then(response=>{\n            console.log(response);\n            if (response.ok) response.json().then(jsonres=>{\n                console.log(jsonres);\n                resolve(jsonres)\n            });\n            else reject(null);\n        }).catch(err=> reject(null))\n    })\n}\n\nexport function getTrending(){\n    const url=`/trending/movie/week`\n    return actually_send_get_request(url);\n};\n\nexport function getSearchMovies(filter,page=1){\n    const url=`/search/movie?query=${filter}&page=${page}`\n    return actually_send_get_request(url);\n}\n\nexport function getMovieDetails(movieID){\n    const url=`/movie/${movieID}?language=en-US`\n    return actually_send_get_request(url);\n\n}\n\nexport function getMovieCredits(movieID){\n    const url=`/movie/${movieID}/credits?language=en-US`\n    return actually_send_get_request(url);\n\n}\n\nexport function getMovieReviews(movieID){\n    const url=`/movie/${movieID}/reviews?language=en-US`\n    return actually_send_get_request(url);\n\n}\n\n\n\nfunction baseURL(){return 'https://api.themoviedb.org/3'}\nfunction api_key(){return '08afc14184aa63504b5201f5497d7cf1'}","// extracted by mini-css-extract-plugin\nexport default {\"ImageGallery\":\"ImageGallery_ImageGallery__4csFQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__c1fa7\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__qWEuN\"};"],"names":["LoadButton","LoadMoreFunc","className","styles","onClick","Loader","Searchbar","submitFunc","onSubmit","e","preventDefault","target","elements","t3Filter","value","type","id","name","autoComplete","autoFocus","placeholder","Movies","useState","imageList","setImageList","filter","setFilter","pageNum","setPageNum","isLoading","setIsLoading","isMoreAvailible","setIsMoreAvailible","error","setError","useSearchParams","searchParams","setSearchParams","newFilter","query","sendRequest","then","response","results","total_pages","catch","err","finally","useEffect","get","console","log","message","items","newPageNum","newItems","prevState","updateImageList","GalleryCard","image","label","onClickF","alternative","src","alt","navigate","useNavigate","length","map","original_title","poster_path","movieID","actually_send_get_request","RelativeURL","querySymbol","indexOf","fullURL","baseURL","Promise","resolve","reject","fetch","ok","json","jsonres","getTrending","getSearchMovies","page","url","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}