{"version":3,"file":"static/js/717.2af8332a.chunk.js","mappings":"+QAUe,SAASA,IACtB,IAAOC,GAASC,EAAAA,EAAAA,MAATD,QACP,GAA+BE,EAAAA,EAAAA,UAAS,IAAxC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAuBF,EAAAA,EAAAA,UAAS,MAAhC,eAAOG,EAAP,KAAaC,EAAb,KAQA,SAASC,EAAT,GAA0B,IAAPC,EAAM,EAANA,KACVC,EAA6BD,EAA7BC,UAAUC,EAAmBF,EAAnBE,KAAKC,EAAcH,EAAdG,aACtB,OACA,SAAC,IAAD,CACEC,MAAOD,EAAc,sCAAsCA,EAAc,GACzEE,OAAO,6BAAM,uBAAIH,IAAV,QAAuB,uBAAID,QACpC,CACJ,OAbEK,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBf,GAASgB,MACvB,SAAAC,GAAQ,OAAGb,EAAaa,EAASC,KAAzB,IACRC,OAAM,SAAAC,GAAG,OAAEd,EAASc,EAAX,GACZ,GAAC,CAACpB,IASDK,GACFgB,QAAQC,IAAIjB,IACL,SAAC,IAAD,CAAckB,QAAQ,6CAG3B,SAAC,IAAD,CAASC,MAAM,OAAf,UACE,gBAAKC,UAAWC,EAAAA,EAAAA,aAAhB,SACCvB,EAAUwB,KAAI,SAAAnB,GAAI,OAAE,SAACD,EAAD,CAAyBC,KAAMA,GAAhBA,EAAKoB,GAAtB,OAIxB,C,8ECrCc,SAASC,EAAT,GAAgF,IAAD,IAAzDjB,MAAAA,OAAyD,MAAnD,GAAmD,MAAhDC,MAAAA,OAAgD,MAA1C,GAA0C,MAAvCiB,SAAAA,OAAuC,MAA9B,WAAY,EAAkB,MAAjBC,YAAAA,OAAiB,MAAL,GAAK,EAC5F,OACE,iBAAKN,UAAWC,EAAAA,EAAAA,iBAA4BM,QAAS,kBAAIF,GAAJ,EAArD,WACI,gBAAKL,UAAWC,EAAAA,EAAAA,0BAAkCO,IAAKrB,EAAOsB,IAAKH,KACnE,yBAAMlB,MAGb,C,uBCTD,SAASsB,EAA0BC,GAC/B,IAAIC,EAAY,KACgB,IAA5BD,EAAYE,QAAQ,OAAWD,EAAY,KAE/C,IAAME,EA4CgB,+BA5CEH,EAAYC,EAAtBG,2CAEd,OAAO,IAAIC,SAAQ,SAACC,EAAQC,GACxBC,MAAML,GAASvB,MAAK,SAAAC,GAChBI,QAAQC,IAAIL,GACRA,EAAS4B,GAAI5B,EAAS6B,OAAO9B,MAAK,SAAA+B,GAClC1B,QAAQC,IAAIyB,GACZL,EAAQK,EACX,IACIJ,EAAO,KACf,IAAExB,OAAM,SAAAC,GAAG,OAAGuB,EAAO,KAAV,GACf,GACJ,CAEM,SAASK,IAEZ,OAAOb,EADG,uBAEb,CAEM,SAASc,EAAgBC,GAAe,IAARC,EAAO,uDAAF,EAClCC,EAAI,uBAAD,OAAwBF,EAAxB,iBAAuCC,GAChD,OAAOhB,EAA0BiB,EACpC,CAEM,SAASC,EAAgBrD,GAE5B,OAAOmC,EADG,UAAD,OAAWnC,EAAX,mBAGZ,CAEM,SAASe,EAAgBf,GAE5B,OAAOmC,EADG,UAAD,OAAWnC,EAAX,2BAGZ,CAEM,SAASsD,EAAgBtD,GAE5B,OAAOmC,EADG,UAAD,OAAWnC,EAAX,2BAGZ,C,qJC3CD,KAAgB,aAAe,mC,qBCA/B,KAAgB,iBAAmB,2CAA2C,yBAAyB,iD","sources":["hw-05-movies/pages/components/Cast.js","hw-05-movies/pages/components/GalleryCard.jsx","hw-05-movies/pages/fetch_functions.js","webpack://react-homework-template/./src/hw-03-image-finder/components/styles/ImageGallery.module.css?0ba8","webpack://react-homework-template/./src/hw-03-image-finder/components/styles/ImageGalleryItem.module.css?9b3f"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../fetch_functions';\n\nimport Section from 'generalComponents/Section';\nimport Notification from 'generalComponents/Notification';\nimport GalleryCard from './GalleryCard';\n\nimport styles from 'hw-03-image-finder/components/styles/ImageGallery.module.css'\n\nexport default function Cast() { \n  const {movieID}=useParams();\n  const [movieCast,setMovieCast]=useState([]);\n  const [error,setError]=useState(null)\n\n  useEffect(()=>{\n    getMovieCredits(movieID).then(\n      response=> setMovieCast(response.cast)\n    ).catch(err=>setError(err))\n  },[movieID])\n  \n  function CastCard({item}){\n    const {character,name,profile_path}=item;\n    return (\n    <GalleryCard \n      image={profile_path?('https://image.tmdb.org/t/p/original'+profile_path):''} \n      label={<span><i>{name}</i> as <b>{character}</b></span>}/>\n  )}\nif (error) {\n  console.log(error);\n  return <Notification message=\"something went wrong, please try again\"/>\n}\n  return (\n    <Section title='Cast'>\n      <div className={styles['ImageGallery']}>\n      {movieCast.map(item=><CastCard key={item.id } item={item}/>)}\n      </div>\n    </Section>\n  )\n}\n","import styles from 'hw-03-image-finder/components/styles/ImageGalleryItem.module.css'\n\nexport default function GalleryCard({image='',label='',onClickF=function(){},alternative=''}) {\n  return (\n    <div className={styles[\"ImageGalleryItem\"]} onClick={()=>onClickF()}>\n        <img className={styles[\"ImageGalleryItem-image\"]} src={image} alt={alternative} />\n        <div>{label}</div>\n    </div>\n  )\n}","function actually_send_get_request(RelativeURL){\n    let querySymbol='?'\n    if (RelativeURL.indexOf('?')!==-1) querySymbol='&'\n\n    const fullURL=baseURL()+RelativeURL+querySymbol+'api_key='+api_key();\n\n    return new Promise((resolve,reject)=>{\n        fetch(fullURL).then(response=>{\n            console.log(response);\n            if (response.ok) response.json().then(jsonres=>{\n                console.log(jsonres);\n                resolve(jsonres)\n            });\n            else reject(null);\n        }).catch(err=> reject(null))\n    })\n}\n\nexport function getTrending(){\n    const url=`/trending/movie/week`\n    return actually_send_get_request(url);\n};\n\nexport function getSearchMovies(filter,page=1){\n    const url=`/search/movie?query=${filter}&page=${page}`\n    return actually_send_get_request(url);\n}\n\nexport function getMovieDetails(movieID){\n    const url=`/movie/${movieID}?language=en-US`\n    return actually_send_get_request(url);\n\n}\n\nexport function getMovieCredits(movieID){\n    const url=`/movie/${movieID}/credits?language=en-US`\n    return actually_send_get_request(url);\n\n}\n\nexport function getMovieReviews(movieID){\n    const url=`/movie/${movieID}/reviews?language=en-US`\n    return actually_send_get_request(url);\n\n}\n\n\n\nfunction baseURL(){return 'https://api.themoviedb.org/3'}\nfunction api_key(){return '08afc14184aa63504b5201f5497d7cf1'}","// extracted by mini-css-extract-plugin\nexport default {\"ImageGallery\":\"ImageGallery_ImageGallery__4csFQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__c1fa7\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__qWEuN\"};"],"names":["Cast","movieID","useParams","useState","movieCast","setMovieCast","error","setError","CastCard","item","character","name","profile_path","image","label","useEffect","getMovieCredits","then","response","cast","catch","err","console","log","message","title","className","styles","map","id","GalleryCard","onClickF","alternative","onClick","src","alt","actually_send_get_request","RelativeURL","querySymbol","indexOf","fullURL","baseURL","Promise","resolve","reject","fetch","ok","json","jsonres","getTrending","getSearchMovies","filter","page","url","getMovieDetails","getMovieReviews"],"sourceRoot":""}