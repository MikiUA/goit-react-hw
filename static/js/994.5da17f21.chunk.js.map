{"version":3,"file":"static/js/994.5da17f21.chunk.js","mappings":"qPAEaA,EAAUC,EAAAA,QAAAA,MAAD,oEAITC,EAAYD,EAAAA,QAAAA,MAAH,iEAITE,EAAWF,EAAAA,QAAAA,OAAD,yG,oICRVG,EAAcH,EAAAA,QAAAA,GAAH,8HAOXI,EAAcJ,EAAAA,QAAAA,GAAH,2FAMXK,EAAYL,EAAAA,QAAAA,IAAH,gP,wGCfdM,EAAmBC,EAAQ,MAA3BD,eAEAE,EAAgBD,EAAQ,MAAxBC,YACR,EAAuBD,EAAQ,MAAxBE,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,QAECC,EAAQL,EAAe,CAChCI,SAAO,eACFF,EAAYI,YAAaJ,EAAYE,UADnC,SAEFD,EAAMC,GAFJ,GAIPG,WAAY,SAACC,GAAD,wBACLA,KADK,CAERN,EAAYK,YAFJ,I,0DCVD,SAASE,IACtB,OACE,wCAEH,C,wBCOc,SAASC,EAAT,GAAoC,IAAD,IAAbC,QAAAA,OAAa,MAAL,CAAC,EAAI,EAEhD,GAAqBC,EAAAA,EAAAA,UAASD,EAAQR,MAAM,IAA5C,eAAOA,EAAP,KAAYU,EAAZ,KACA,GAAyBD,EAAAA,EAAAA,UAASD,EAAQG,QAAQ,IAAlD,eAAOA,EAAP,KAAcC,EAAd,KACA,GAA+BH,EAAAA,EAAAA,WAAS,GAAxC,eAAOI,EAAP,KAAiBC,EAAjB,KACA,GAAuBL,EAAAA,EAAAA,UAAS,MAAhC,eAAOM,EAAP,KAAaC,EAAb,KAEMC,GAASC,EAAAA,EAAAA,MACf,GAA6FC,EAAAA,EAAAA,yBAA7F,eAAOC,EAAP,YAA6BC,EAA7B,EAAmBC,UAAiCC,EAApD,EAA0CV,UAA6BW,EAAvE,EAA+DC,QAAuBC,EAAtF,EAAgFX,MAChF,GAA+FY,EAAAA,EAAAA,0BAA/F,eAAOC,EAAP,YAA8BC,EAA9B,EAAoBP,UAAkCQ,EAAtD,EAA4CjB,UAA6BkB,EAAzE,EAAiEN,QAAuBO,EAAxF,EAAkFjB,MA8BlF,OA5BAkB,EAAAA,EAAAA,YAAU,WACJZ,IACFX,EAAQ,IAAIE,EAAU,IAAIE,GAAa,GAE1C,GAAC,CAACO,KAEHY,EAAAA,EAAAA,YAAU,WACJJ,GACFZ,GAASiB,EAAAA,EAAAA,aAGZ,GAAC,CAACL,KAEHI,EAAAA,EAAAA,YAAU,YACJV,GAAYO,IAAahB,GAAa,EAC3C,GAAC,CAACS,EAAWO,KAEdG,EAAAA,EAAAA,YAAU,WACJT,GAAUR,EAASU,GACnBK,GAAUf,EAASgB,EACxB,GAAC,CAACR,EAASO,EAASL,EAAKM,KASxB,kBAAMG,SAAU,SAACC,GAAKA,EAAEC,iBANxBrB,EAAS,MACJR,EAAQ8B,GACDV,EAAY,CAACU,GAAG9B,EAAQ8B,GAAGtC,KAAAA,EAAKW,OAAAA,IADpBS,EAAW,CAACpB,KAAAA,EAAKW,OAAAA,GAKc,EAAvD,WACE,4BACA,SAAC,KAAD,CAAW4B,QAAQ,WAAnB,mFACA,SAAC,KAAD,CACED,GAAG,WACHE,MAAOxC,EACPyC,SAAU,SAACC,GAAD,OAAUhC,EAAQgC,EAAMC,OAAOH,MAA/B,EACVI,KAAK,OACL5C,KAAK,OACL6C,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGV,4BACA,SAAC,KAAD,CAAWR,QAAQ,UAAnB,0GACA,SAAC,KAAD,CACED,GAAG,UACHE,MAAO7B,EACP8B,SAAU,SAACC,GAAD,OAAU9B,EAAU8B,EAAMC,OAAOH,MAAjC,EACVI,KAAK,MACL5C,KAAK,SACL6C,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGV,SAAC,KAAD,CAAYC,SAAUnC,EAAW+B,KAAK,SAAtC,SACG/B,GAAU,SAACP,EAAD,IAAUE,EAAQ8B,GAAG,mDAAW,oFAE5CvB,GAAM,SAACkC,EAAA,EAAD,CAAcC,QAASnC,EAAMmC,UAAW,KAGpD,C,aC1Ec,SAASC,EAAT,GAAoD,IAAD,IAA3B3C,QAAS8B,EAAkB,EAAlBA,GAAGtC,EAAe,EAAfA,KAAKW,EAAU,EAAVA,OAC9CyC,GAAoBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAEA,EAAMF,mBAAR,IACrCnC,GAASC,EAAAA,EAAAA,MACf,GAA2BT,EAAAA,EAAAA,WAAS,GAApC,eAAO8C,EAAP,KAAkBC,EAAlB,KAEA,GAA6EC,EAAAA,EAAAA,4BAA7E,eAAOC,EAAP,YAAgCC,EAAhC,EAAsB9C,UAA+B+C,EAArD,EAA6CnC,QAAuBoC,EAApE,EAA8D9C,MAC9D,GAAmCY,EAAAA,EAAAA,0BAAhBmC,GAAnB,eAASjD,UASX,OALEoB,EAAAA,EAAAA,YAAU,WACwBuB,EAA1BJ,IAAsBd,EAE7B,GAAC,CAACc,EAAoBd,KAGvB,UAAC,KAAD,WACSiB,GACG,SAAC,EAAD,CAAgB/C,QAAS,CAAC8B,GAAAA,EAAGtC,KAAAA,EAAKW,OAAAA,MAElC,gCAAGX,EAAH,OAAaW,KAGhBgD,GAAa,SAAC,KAAD,4BACd,SAAC,KAAD,CAAWI,QAAS,kBAhB5B,SAA4BzB,GAAIoB,EAAc,CAACpB,GAAAA,GAAK,CAgBpB0B,CAAmB1B,EAAvB,EAApB,oBAECwB,GACG,SAAC,KAAD,2BACDP,GAGC,SAAC,KAAD,CAAWQ,QAAS,kBAAI9C,GAASiB,EAAAA,EAAAA,aAAb,EAApB,qBAFA,SAAC,KAAD,CAAW6B,QAAS,kBAAI9C,GAASgD,EAAAA,EAAAA,YAAW3B,GAAxB,EAApB,0BAIHsB,GAAS,SAACX,EAAA,EAAD,CAAcH,MAAM,iBAAiBI,QAASW,GAAUA,EAAOX,UAAW,KAG/F,CCrCc,SAASgB,IACtB,OAAyBzD,EAAAA,EAAAA,UAAS,IAAlC,eAAO0D,EAAP,KAAcC,EAAd,KACA,GAAgCC,EAAAA,EAAAA,uBAApBC,EAAZ,EAAOC,KAAc1D,EAArB,EAAqBA,UAQrB,OACE,4BACE,SAAC,KAAD,CACE+B,KAAK,OACLJ,MAAO2B,EACPK,YAAY,iBACZ/B,SAAU,SAACL,GAAD,OAAKgC,EAAUhC,EAAEO,OAAOH,MAAMiC,cAA9B,KAEZ,SAAC,KAAD,UACG5D,GAAU,SAACP,EAAD,IACTgE,EAASH,QAhBjB,SAAmBO,GACjB,QAAIA,EAAK1E,KAAKyE,cAAcE,SAASR,MACjCO,EAAK/D,OAAOiE,WAAWD,SAASR,EAErC,IAYkCU,KAAI,SAACH,GAAD,OAC7B,SAACvB,EAAD,CAA6B3C,QAASkE,GAAlBA,EAAKpC,GADI,QAOxC,CC7Bc,SAASwC,IAEtB,OACE,SAAC,KAAD,CAAU5E,MAAOA,EAAjB,UACA,UAAC6E,EAAA,EAAD,CAASnC,KAAK,OAAOE,MAAM,wFAA3B,WACE,SAACiC,EAAA,EAAD,CAASC,MAAM,cAAf,UACE,SAAC,EAAD,OAEF,SAACD,EAAA,EAAD,CAASC,MAAM,eAAf,UACE,SAACd,EAAD,UAKP,C,gSClBKe,EAAe,YAERlF,GAAamF,EAAAA,EAAAA,IAAU,CAChC/E,YAAa,WACbgF,WAAUC,EAAAA,EAAAA,IAAe,CACrBC,QANS,gDAQbC,SAAU,CAAC,YACXC,UAAW,SAACC,GAAD,MAAY,CACnBC,YAAYD,EAAQE,MAAM,CACtBA,MAAM,kBAAIT,CAAJ,EACNU,aAAa,CAAC,cAElBvE,WAAWoE,EAAQI,SAAS,CACxBF,MAAO,SAACG,GAAD,MAAS,CACZC,IAAIb,EACJc,OAAO,OACPF,KAAAA,EAHG,EAKPG,gBAAgB,CAAC,cAErBtC,cAAc8B,EAAQI,SAAS,CAC3BF,MAAO,kBAAS,CACZI,IAAIb,aADD,EAAE3C,GAELyD,OAAO,SAFJ,EAIPC,gBAAgB,CAAC,cAErBpE,YAAY4D,EAAQI,SAAS,CACzBF,MAAO,kBAAiB,CACpBI,IAAIb,aADD,EAAE3C,GAELyD,OAAO,MACPF,MAHG,cAKPG,gBAAgB,CAAC,cA1Bd,IA+BD3B,EAA6FtE,EAA7FsE,oBAAoBlD,EAAyEpB,EAAzEoB,sBAAsBQ,EAAmD5B,EAAnD4B,uBAAuB8B,EAA4B1D,EAA5B0D,wB,2KCxClEzD,EAAK,sBAELiE,GAAWgC,EAAAA,EAAAA,cAAajG,EAAK,eAC7BkC,GAAU+D,EAAAA,EAAAA,cAAajG,EAAK,cAElC,SAASC,IAA4B,IAApBiG,EAAmB,uDAAZ,KAAKC,EAAO,uCAEvC,OADAC,QAAQC,IAAI,SAASF,GACbA,EAAOvD,MACX,KAAMqB,EAAWrB,KACb,OAAOuD,EAAOG,QAElB,KAAMpE,EAAUU,KACZ,OAAO,KAEX,QAAS,OAAOsD,EAEvB,C","sources":["hw-02-phonebook/styles/AddContactForm.styled.js","hw-02-phonebook/styles/ContactDisplay.styled.js","hw-07-phonebook/redux/store.js","generalComponents/Loader.js","hw-07-phonebook/components/ContactForm.js","hw-07-phonebook/components/SingleContact.js","hw-07-phonebook/components/DisplayContacts.js","hw-07-phonebook/App.js","hw-07-phonebook/redux/commentsApi.js","hw-07-phonebook/redux/currentlyEditedItem.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FormLabel=styled.label`\n    display:block;\n    font-style:italic;\n`\nexport const FormInput = styled.input`\n    font-size:55%;\n    margin-left:5%;\n`\nexport const FormButton=styled.button`\n    display:block;\n    margin-top:1em;\n    margin-left:5%;\n    font-size:40%;\n`","import styled from \"styled-components\";\n\nexport const ContactList = styled.ul`\nwidth:fit-content;\npadding-right:1em;\nheight:20em;\nborder-left:1px solid black;\noverflow-y:auto;\n`\nexport const ContactItem = styled.li`\nmargin-top:2%;\nbordewr-left:1px solid black;\npadding-left:0.2em\n`\n\nexport const DeleteBtn = styled.div`\n    display:block;\n    text-align:center;\n    background-color:#dcaaaa;\n    font-size:35%;\n    border-radius:10em;\n    \n    &:hover{\n        background-color:#ee4444;\n        border: 1px solid #aa0000\n    }\n`","const { configureStore } = require(\"@reduxjs/toolkit\");\n\nconst { contactsApi } = require(\"./commentsApi\");\nconst {name,reducer }= require(\"./currentlyEditedItem\");\n\nexport const store = configureStore({\n    reducer:{\n        [contactsApi.reducerPath]:contactsApi.reducer,\n        [name]:reducer\n    },\n    middleware: (getDefaultMiddleware) => [\n        ...getDefaultMiddleware(),\n        contactsApi.middleware\n    ]\n})","export default function Loader() {\n  return (\n    <div>Loading ...</div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport { useAddContactMutation, useEditContactMutation } from 'hw-07-phonebook/redux/commentsApi';\n\nimport { FormButton, FormInput, FormLabel } from 'hw-02-phonebook/styles/AddContactForm.styled';\nimport Loader from 'generalComponents/Loader';\nimport Notification from 'generalComponents/Notification';\nimport { useDispatch } from 'react-redux';\nimport { resetItem } from 'hw-07-phonebook/redux/currentlyEditedItem';\n\n\nexport default function ContactForm({contact={}}) {\n  //basically if there is no contact.id this function adds a contact, but if there is then edits\n  const [name,setName]=useState(contact.name||'');\n  const [number,setNumber]=useState(contact.number||'');\n  const [isLoading,setIsLoading]=useState(false);\n  const [error,setError]=useState(null);\n  \n  const dispatch=useDispatch();\n  const [addContact,{isSuccess:isSuccessAdd,isLoading:isLoading1,isError:isError1,error:err1}]=useAddContactMutation();\n  const [editContact,{isSuccess:isSuccessEdit,isLoading:isLoading2,isError:isError2,error:err2}]=useEditContactMutation();\n\n  useEffect(()=>{\n    if (isSuccessAdd){ \n      setName('');setNumber('');setIsLoading(false);\n    }\n  },[isSuccessAdd]);\n\n  useEffect(()=>{\n    if (isSuccessEdit){ \n      dispatch(resetItem());\n    }\n    //eslint-disable-next-line\n  },[isSuccessEdit]);\n\n  useEffect(()=>{\n    if (isLoading1||isLoading2) {setIsLoading(true);}\n  },[isLoading1,isLoading2]);\n\n  useEffect(()=>{\n    if (isError1){setError(err1);}\n    if (isError2){setError(err2);}\n  },[isError1,isError2,err1,err2]);\n\n  function submitForm(){\n    setError(null);\n    if (!contact.id) return addContact({name,number})\n    else return editContact({id:contact.id,name,number})\n  }\n\n  return (\n    <form onSubmit={(e)=>{e.preventDefault();submitForm();}}>\n      <div>\n      <FormLabel htmlFor='acf-name'>Ім'я контакту</FormLabel>\n      <FormInput\n        id='acf-name'\n        value={name}\n        onChange={(event)=>(setName(event.target.value))}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      </div>\n      <div>\n      <FormLabel htmlFor='acf-num'>Телефонний номер</FormLabel>\n      <FormInput\n        id='acf-num'\n        value={number}\n        onChange={(event)=>(setNumber(event.target.value))}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      </div>\n      <FormButton disabled={isLoading} type='submit'>\n        {isLoading?<Loader/>:contact.id?'Замінити':'Додати контакт'}\n      </FormButton>\n      {error?<Notification message={error.message}/>:''}\n    </form>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Notification from 'generalComponents/Notification';\nimport { ContactItem, DeleteBtn } from 'hw-02-phonebook/styles/ContactDisplay.styled';\nimport AddContactForm from './ContactForm';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useDeleteContactMutation, useEditContactMutation } from 'hw-07-phonebook/redux/commentsApi';\nimport { resetItem, selectItem } from 'hw-07-phonebook/redux/currentlyEditedItem';\n\n\nexport default function SingleContact({contact:{id,name,number}}) {\n    const currentlyEditedItem=useSelector(state=>state.currentlyEditedItem);\n    const dispatch=useDispatch();\n    const [isEditMode,setMode]=useState(false);\n\n    const [deleteContact,{isLoading:isDelLoading,isError:isDelErr,error:delErr}]=useDeleteContactMutation();\n    const [,{isLoading:isEditLoading}]=useEditContactMutation();\n    \n    function deleteContactLocal(id){deleteContact({id})}\n\n    useEffect(()=>{\n        if (currentlyEditedItem===id) setMode(true);\n        else setMode(false);\n    },[currentlyEditedItem,id])\n\n  return (\n    <ContactItem>\n            {isEditMode?\n                <AddContactForm contact={{id,name,number}}/>\n            :(\n                <>{name} :  {number}</>\n            )}\n            \n            {isDelLoading?<DeleteBtn> Loading... </DeleteBtn>:\n            <DeleteBtn onClick={()=>deleteContactLocal(id)}>Delete</DeleteBtn>\n            }\n            {isEditLoading?\n                <DeleteBtn> Loading... </DeleteBtn>\n            :(!isEditMode)?\n                <DeleteBtn onClick={()=>dispatch(selectItem(id))}>Edit contact</DeleteBtn>\n\n            :   <DeleteBtn onClick={()=>dispatch(resetItem())}>Cancel</DeleteBtn>\n            }\n            {isDelErr?<Notification title='deletion error' message={delErr && delErr.message}/>:''}\n    </ContactItem>\n  )\n}\n","import React, {  useState } from 'react'\nimport Loader from 'generalComponents/Loader';\nimport { ContactList } from 'hw-02-phonebook/styles/ContactDisplay.styled';\nimport { FormInput } from 'hw-02-phonebook/styles/AddContactForm.styled';\n\nimport { useGetContactsQuery } from 'hw-07-phonebook/redux/commentsApi';\nimport SingleContact from './SingleContact';\n\n\nexport default function DisplayContacts() {\n  const [filter,setFilter]=useState('');\n  const {data:contacts,isLoading}=useGetContactsQuery();\n  \n  function checkItem(item){\n    if (item.name.toUpperCase().includes(filter)) return true;\n    if (item.number.toString().includes(filter)) return true;\n    return false;\n  }\n\n  return (\n    <div>\n      <FormInput\n        type='text' \n        value={filter} \n        placeholder='find a contact'\n        onChange={(e)=>setFilter(e.target.value.toUpperCase())}\n      />\n      <ContactList>\n        {isLoading?<Loader/>:(\n          contacts.filter(checkItem).map((item)=>(\n            <SingleContact key={item.id} contact={item}/>\n          ))\n        )}\n      </ContactList>\n    </div>\n  )\n}","import { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nimport Section from 'generalComponents/Section'\nimport AddContactForm from './components/ContactForm'\nimport DisplayContacts from './components/DisplayContacts'\n\nexport default function App() {\n\n  return (\n    <Provider store={store}>\n    <Section type='task' title='Книга контактів'>\n      <Section label='Add contact'>\n        <AddContactForm/>\n      </Section>\n      <Section label='Contact list'>\n        <DisplayContacts/>\n      </Section>\n    </Section>\n    </Provider>\n  )\n}\n","import {createApi,fetchBaseQuery} from '@reduxjs/toolkit/query/react';\n\nconst BASE_URL = 'https://640d9283b07afc3b0db06bfb.mockapi.io';\nconst API_ENDPOINT = '/contacts';\n\nexport const contactsApi= createApi({\n    reducerPath: 'contacts',\n    baseQuery:fetchBaseQuery({\n        baseUrl: BASE_URL\n    }),\n    tagTypes: ['contacts'],\n    endpoints: (builder)=>({\n        getContacts:builder.query({\n            query:()=>API_ENDPOINT,\n            providesTags:['contacts']\n        }),\n        addContact:builder.mutation({\n            query: (body)=>({\n                url:API_ENDPOINT,\n                method:\"POST\",\n                body\n            }),\n            invalidatesTags:['contacts']\n        }),\n        deleteContact:builder.mutation({\n            query: ({id})=>({\n                url:API_ENDPOINT+'/'+id,\n                method:\"DELETE\"\n            }),\n            invalidatesTags:['contacts']\n        }),\n        editContact:builder.mutation({\n            query: ({id,...body})=>({\n                url:API_ENDPOINT+'/'+id,\n                method:\"PUT\",\n                body\n            }),\n            invalidatesTags:['contacts']\n        })\n    })\n})\n\nexport const {useGetContactsQuery,useAddContactMutation,useEditContactMutation,useDeleteContactMutation} = contactsApi;","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const name='currentlyEditedItem'\n\nexport const selectItem=createAction(name+'/selectItem');\nexport const resetItem=createAction(name+'/resetItem');\n\nexport function reducer(itemID=null,action){\n    console.log('action',action)\n    switch (action.type){\n        case (selectItem.type):{\n            return action.payload\n        }\n        case (resetItem.type):{\n            return null\n        }\n        default: return itemID;\n    }\n}"],"names":["FormLabel","styled","FormInput","FormButton","ContactList","ContactItem","DeleteBtn","configureStore","require","contactsApi","name","reducer","store","reducerPath","middleware","getDefaultMiddleware","Loader","ContactForm","contact","useState","setName","number","setNumber","isLoading","setIsLoading","error","setError","dispatch","useDispatch","useAddContactMutation","addContact","isSuccessAdd","isSuccess","isLoading1","isError1","isError","err1","useEditContactMutation","editContact","isSuccessEdit","isLoading2","isError2","err2","useEffect","resetItem","onSubmit","e","preventDefault","id","htmlFor","value","onChange","event","target","type","pattern","title","required","disabled","Notification","message","SingleContact","currentlyEditedItem","useSelector","state","isEditMode","setMode","useDeleteContactMutation","deleteContact","isDelLoading","isDelErr","delErr","isEditLoading","onClick","deleteContactLocal","selectItem","DisplayContacts","filter","setFilter","useGetContactsQuery","contacts","data","placeholder","toUpperCase","item","includes","toString","map","App","Section","label","API_ENDPOINT","createApi","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","mutation","body","url","method","invalidatesTags","createAction","itemID","action","console","log","payload"],"sourceRoot":""}