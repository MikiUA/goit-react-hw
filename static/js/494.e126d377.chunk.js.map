{"version":3,"file":"static/js/494.e126d377.chunk.js","mappings":"gQAEaA,EAAcC,EAAAA,QAAAA,IAAH,4CAGXC,EAAWD,EAAAA,QAAAA,OAAD,2D,SCmBvB,I,IAAA,EApBA,YAAkD,IAA3BE,EAA0B,EAA1BA,QAAQC,EAAkB,EAAlBA,gBAC7B,OACE,SAACJ,EAAD,UACKG,EAAQE,KAAI,SAACC,GAAD,OACX,SAACJ,EAAD,CACEK,MAAO,CAACC,OAAO,mBACfC,QAAS,kBAAKL,EAAgBE,EAArB,EAFX,SAGKA,GAHYA,EADN,KAUpB,E,UCjBgBL,EAAWS,EAAQ,MAA5BC,QAEKC,EAAeX,EAAOY,GAAR,0CAIdC,EAAmBb,EAAOc,IAAV,gJAGF,SAAAC,GAAK,OAAE,IAAIA,EAAMC,SAAS,IAAI,GAAzB,IAAgC,SAAAD,GAAK,OAAEA,EAAMC,SAAS,IAAI,GAArB,IAC9C,SAAAD,GAAK,OAAE,IAAIA,EAAMC,SAAS,IAAI,GAAzB,IAAgC,SAAAD,GAAK,OAAEA,EAAMC,SAAS,IAAI,GAArB,ICqBjE,MA1BA,YAA4C,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,IAAIC,EAAU,EAAVA,QACzBC,EAsBR,SAAmBH,EAAKI,EAAKH,GAAK,OAAQD,EAAKI,EAAKH,CAAM,CAtB5CI,CAAUL,EAAKC,EAAIC,GAC7B,IAAKC,EAAO,OAAO,SAACG,EAAA,EAAD,CAAcC,QAAQ,yBACzC,IAqByBC,EAAWC,EArBhCC,GAqBqBF,EArBeL,EAqBJM,EArBUT,EAqBaW,KAAKC,MAA4C,KAArCH,EAAcD,GAAYK,QAAQ,KAnB3G,OACE,UAACnB,EAAD,YACE,mCAAWM,MACX,sCAAcE,MACd,kCAAUD,MACV,mBACA,oCAAYE,MACZ,yBAAI,UAACP,EAAD,CAAkBG,SAAUW,EAA5B,uBAAwDA,EAAxD,WAGT,ECfKI,EAAe,CAAC,KAAO,EAAE,QAAU,EAAE,IAAM,GAC3CC,EAAiB,CAAC,OAAO,UAAU,OA2BzC,EAxBY,WACV,OAAuCC,EAAAA,EAAAA,UAASF,GAAhD,eAAOG,EAAP,KAAqBC,EAArB,KAUA,OACE,UAACC,EAAA,EAAD,CAASC,KAAK,OAAOC,MAAM,wFAA3B,WACE,SAACF,EAAA,EAAD,CAASG,MAAM,wBAAf,UACE,SAAC,EAAD,CAAcrC,QAAS8B,EAAkB7B,gBAX/C,SAAyBE,GACvB8B,GAAiB,SAAAK,GAAS,yBACrBA,GADqB,cAEvBnC,EAASmC,EAAUnC,GAAQ,GAFJ,GAI3B,OASG,SAAC+B,EAAA,EAAD,CAASG,MAAM,sBAAf,UACE,SAAC,EAAD,CAAetB,KAAMiB,EAAcjB,KAAMC,IAAKgB,EAAchB,IAAKC,QAASe,EAAcf,cAI/F,C","sources":["hw-02-feedback/feedback form/styles/FeedbackForm.styled.js","hw-02-feedback/feedback form/FeedbackForm.js","hw-02-feedback/feedback form/styles/FeedbackDisplay.styled.js","hw-02-feedback/feedback form/FeedbackStats.js","hw-02-feedback/App.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FormWrapper = styled.div`\ntext-align:center;\n`\nexport const FormButton=styled.button`\nfont-size:80%;\nmargin: 5px 10px;\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormButton, FormWrapper } from './styles/FeedbackForm.styled';\n\nfunction FeedbackForm({options,onLeaveFeedback}) {\n  return (\n    <FormWrapper>\n        {options.map((option)=>(\n          <FormButton key={option} \n            style={{border:'1px solid black'}} \n            onClick={()=>(onLeaveFeedback(option))}>\n              {option}\n          </FormButton>\n        ))}\n\n    </FormWrapper>\n  )\n}\n\nFeedbackForm.propTypes = {\n  options:PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback:PropTypes.func\n}\n\nexport default FeedbackForm\n","const { default: styled } = require(\"styled-components\");\n\nexport const DisplayWrapper=styled.ul`\nmargin-left:10%;\n`\n\nexport const PositiveColoring = styled.div`\n    width:fit-content;\n    border:3px solid;\n    background-color:rgb(${props=>255-props.positive/100*255},${props=>props.positive/100*255},50);\n    border-color:rgb(${props=>205-props.positive/100*225},${props=>props.positive/100*205},0);\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Notification from 'generalComponents/Notification';\nimport { DisplayWrapper, PositiveColoring } from './styles/FeedbackDisplay.styled';\n\nfunction FeedbackStats({good,bad,neutral}) {\n    let total=calcTotal(good,bad,neutral);\n    if (!total) return <Notification message='No Feedback recieved'/>\n    let positivePercent=calcPositivePercent(total,good);\n    \n  return (\n    <DisplayWrapper>\n      <li>good: {good}</li>\n      <li>neutral: {neutral}</li> \n      <li>bad: {bad}</li>\n      <br/>\n      <li>total: {total}</li>\n      <li><PositiveColoring positive={positivePercent}>positive: {positivePercent}%</PositiveColoring></li>\n    </DisplayWrapper>\n  )\n}\n\nFeedbackStats.propTypes = {\n  good:PropTypes.number,\n  neutral:PropTypes.number,\n  bad:PropTypes.number,\n}\n\nfunction calcTotal(good,neut,bad){return (good+neut+bad);}\nfunction calcPositivePercent(totalItems,positiveItems) {return Math.round((positiveItems/totalItems).toFixed(2)*100);}\n\nexport default FeedbackStats","import React, { useState } from 'react'\nimport Section from 'generalComponents/Section';\nimport FeedbackForm from './feedback form/FeedbackForm';\nimport FeedbackStats from './feedback form/FeedbackStats';\n\nconst initialOptions={'good':0,'neutral':0,'bad':0};\nconst availibleOptions=['good','neutral','bad'];\n//some translation of object into availible options is required, currently this program will break if these 2 don't match\n\nconst App = () => {\n  const [feedbackStats,setFeedbackStats]=useState(initialOptions);\n\n  function onLeaveFeedback(option){//\n    setFeedbackStats(prevState=>({\n      ...prevState,\n      [option]:(prevState[option]+1)\n    }));\n  }\n\n\n  return (\n    <Section type='task' title='Віджет відгуків'>\n      <Section label='Please leave feedback'>\n        <FeedbackForm options={availibleOptions} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n\n      <Section label='Feedback statistics'>\n        <FeedbackStats good={feedbackStats.good} bad={feedbackStats.bad} neutral={feedbackStats.neutral} />\n      </Section>\n    </Section>\n  );\n};\n\nexport default App"],"names":["FormWrapper","styled","FormButton","options","onLeaveFeedback","map","option","style","border","onClick","require","default","DisplayWrapper","ul","PositiveColoring","div","props","positive","good","bad","neutral","total","neut","calcTotal","Notification","message","totalItems","positiveItems","positivePercent","Math","round","toFixed","initialOptions","availibleOptions","useState","feedbackStats","setFeedbackStats","Section","type","title","label","prevState"],"sourceRoot":""}