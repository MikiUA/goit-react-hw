{"version":3,"file":"static/js/356.7bd696bb.chunk.js","mappings":"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","sources":["hw-01-components/friendList/FriendItem.js","hw-01-components/friendList/FriendList.js","hw-01-components/friendList/FriendListWrapper.js","webpack://react-homework-template/./src/hw-01-components/profile/Profile.module.css?646c","hw-01-components/profile/Profile.js","hw-01-components/profile/ProfileWrapper.js","webpack://react-homework-template/./src/hw-01-components/statistics/Statistics.module.css?d5db","hw-01-components/statistics/Statistics.js","hw-01-components/statistics/StatisticsWrapper.js","webpack://react-homework-template/./src/hw-01-components/transactionHistory/Transactions.module.css?0ed8","hw-01-components/transactionHistory/TransactionHistory.js","hw-01-components/transactionHistory/TransactionsWrapper.js","hw-01-components/App.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction FriendItem({item:{avatar,name,isOnline}}) {\n  return (\n    <div style={{\n      border:'1px solid black',\n      margin:'5px',\n      borderShadow:'1px solid gray',\n      padding:'2px'\n    }}>\n      <span style={{\n        color:(isOnline)?'green':'red',\n        paddingLeft:'10px'\n        }}>\n          *\n      </span>\n\n      <img \n        style={{\n          height:'50px',\n          width:'50px',\n          padding:'2px 10px'\n        }}\n        src={avatar}  alt=\"User avatar\">\n      </img>\n        {name}\n        \n    </div>\n  )\n}\n\nFriendItem.propTypes = {\n  item:PropTypes.shape({\n    id: PropTypes.any,\n    avatar: PropTypes.string,\n    name: PropTypes.string,\n    isOnline: PropTypes.bool\n  })\n}\n\nexport default FriendItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FriendItem from './FriendItem'\n\nfunction FriendList({friends}) {\n  return (\n    <ul className=\"friend-list\">\n    {friends.map((friend)=>{\n        if (!friend.id) return console.warn(\"there is a friend item without id\")\n        return <FriendItem key={friend.id} item={friend} />\n    })}\n</ul>\n  )\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar:PropTypes.string,\n      name:PropTypes.string.isRequired,//?\n      isOnline:PropTypes.bool,\n      id:PropTypes.any.isRequired,\n  }))\n}\n\nexport default FriendList\n","import Section from 'generalComponents/Section'\nimport React from 'react'\nimport FriendList from './FriendList'\n\nimport friends from './friends.json'\n\nexport default function FriendListWrapper() {\n  return (\n    <Section type='task' title='Friend List'>\n        <FriendList friends={friends}/>\n    </Section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__9YTJh\",\"description\":\"Profile_description__ZowXJ\",\"avatar\":\"Profile_avatar__BlXr1\",\"name\":\"Profile_name__yPNoR\",\"tag\":\"Profile_tag__y72mq\",\"location\":\"Profile_location__pzA6x\",\"stats\":\"Profile_stats__qlVhr\",\"label\":\"Profile_label__abG5I\",\"quantity\":\"Profile_quantity__x5Dcl\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Profile.module.css'\n\nfunction Profile({username,tag,location,avatar,stats}) {\n  return (\n    <div className={styles.profile}>\n        <div className={styles.description}>\n            <img\n            src={avatar}\n            alt=\"User avatar\"\n            className={styles.avatar}\n            />\n            <p className={styles.name}>{username}</p>\n            <p className={styles.tag}>@{tag}</p>\n            {location?\n              <p className={styles.location}>{location}</p>\n            :''}\n        </div>\n\n        <ul className={styles.stats}>\n            <li>\n            <span className={styles.label}>Followers</span>\n            <span className={styles.quantity}>{stats.followers}</span>\n            </li>\n            <li>\n            <span className={styles.label}>Views</span>\n            <span className={styles.quantity}>{stats.views}</span>\n            </li>\n            <li>\n            <span className={styles.label}>Likes</span>\n            <span className={styles.quantity}>{stats.likes}</span>\n            </li>\n        </ul>\n        </div>\n  )\n}\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.exact({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number\n  }).isRequired\n}\nexport default Profile\n","import Section from 'generalComponents/Section'\nimport React from 'react'\nimport Profile from './Profile'\nimport user from './user.json'\n\nexport default function ProfileWrapper() {\n  return (\n    <Section type='task' title='Profile'>\n    <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n     />\n    </Section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"statistics\":\"Statistics_statistics__MI-Fk\",\"title\":\"Statistics_title__PpMpS\",\"stat-list\":\"Statistics_stat-list__P0E64\",\"item\":\"Statistics_item__r-vsp\",\"label\":\"Statistics_label__THUuD\",\"percentage\":\"Statistics_percentage__0hl-F\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Statistics.module.css'\n\nlet randomcolor = () => {return '#'+Math.floor(Math.random()*16777215).toString(16)}\n\nfunction Statistics({title,stats}) {\n    if (!checkstats(stats)) return console.warn(\"Sent stats do not average to 100%\");\n  return (\n    <section className={styles.statistics}>\n        {title?<h2 className={styles.title}>{title}</h2>:''}\n\n        <ul className={styles['stat-list']}>\n            {stats.map(({id,label,percentage})=>{\n                return (\n                    <li style={{backgroundColor:randomcolor()}} className={styles.item} key={id} >\n                    <span className={styles.label}>{label} </span>\n                    <span className={styles.percentage}>{percentage}%</span>\n                    </li>\n                )\n            })}\n        </ul>\n    </section>\n  )\n}\n\nfunction checkstats(stats){\n   let _100percent= stats.reduce((accumulator,currentValue)=> accumulator+currentValue.percentage,0)\n//    console.log(_100percent);\n   return _100percent===100 ?1:0;\n}\nStatistics.propTypes = {\n    title:PropTypes.string,\n    stats:PropTypes.arrayOf(\n        PropTypes.exact({\n            id:PropTypes.any,\n            label:PropTypes.string,\n            percentage:PropTypes.number\n        })\n    ).isRequired\n}\n\nexport default Statistics\n","import Section from 'generalComponents/Section'\nimport React from 'react'\nimport data from './data.json'\nimport Statistics from './Statistics'\n\nexport default function StatisticsWrapper() {\n  return (\n    <Section type='task' title='Statistics'>\n    <Statistics stats={data}/>\n    <br/>\n    <Statistics title=\"Upload Stats\" stats={data}/>\n    </Section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"transaction-history\":\"Transactions_transaction-history__VMNiM\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Transactions.module.css'\n\nfunction TransactionHistory({items}) {\n  return (\n    <table className={styles['transaction-history']}>\n        <thead>\n            <tr>\n                <th>Type</th>\n                <th>Amount</th>\n                <th>Currency</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            {items.map(({id,type,amount,currency})=>{\n                return (\n                <tr key={id}>\n                    <td>{type}</td>\n                    <td>{amount}</td>\n                    <td>{currency}</td>\n                </tr>\n                )\n            })}\n        </tbody>\n    </table>\n  )\n}\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id:PropTypes.any,\n            type:PropTypes.string,\n            amount:PropTypes.any,//theoretically number but json passes us strigs and we should check exact shape anyway\n            currency:PropTypes.string\n        })\n    )\n}\n\nexport default TransactionHistory\n","import Section from 'generalComponents/Section'\nimport React from 'react'\nimport TransactionHistory from './TransactionHistory'\nimport transactions from './transactions.json'\n\nexport default function TransactionsWrapper() {\n  return (\n    <Section type='task' title='Transaction History'>\n    <TransactionHistory items={transactions}/>\n    </Section>\n  )\n}\n","import FriendListWrapper from \"./friendList/FriendListWrapper\";\nimport ProfileWrapper from \"./profile/ProfileWrapper\";\nimport StatisticsWrapper from \"./statistics/StatisticsWrapper\";\nimport TransactionsWrapper from \"./transactionHistory/TransactionsWrapper\";\n\nconst App = () => {\n  return (\n    <div className=\"task-flex-display\">\n      <ProfileWrapper/> \n      <StatisticsWrapper/>\n      <FriendListWrapper/>\n      <TransactionsWrapper/>\n    </div>\n  );\n};\nexport default App"],"names":["item","avatar","name","isOnline","style","border","margin","borderShadow","padding","color","paddingLeft","height","width","src","alt","friends","className","map","friend","id","console","warn","FriendListWrapper","Section","type","title","username","tag","location","stats","styles","followers","views","likes","ProfileWrapper","user","reduce","accumulator","currentValue","percentage","checkstats","label","backgroundColor","Math","floor","random","toString","StatisticsWrapper","data","items","amount","currency","TransactionsWrapper","transactions"],"sourceRoot":""}