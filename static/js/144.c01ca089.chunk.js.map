{"version":3,"file":"static/js/144.c01ca089.chunk.js","mappings":"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","sources":["hw-02-phonebook/styles/AddContactForm.styled.js","hw-02-phonebook/styles/ContactDisplay.styled.js","hw-06-phonebook/Reducer.js","hw-06-phonebook/components/AddContactForm.js","hw-06-phonebook/components/DisplayContacts.js","hw-06-phonebook/App.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FormLabel=styled.label`\n    display:block;\n    font-style:italic;\n`\nexport const FormInput = styled.input`\n    font-size:55%;\n    margin-left:5%;\n`\nexport const FormButton=styled.button`\n    display:block;\n    margin-top:1em;\n    margin-left:5%;\n    font-size:40%;\n`","import styled from \"styled-components\";\n\nexport const ContactList = styled.ul`\nwidth:fit-content;\npadding-right:1em;\nheight:20em;\nborder-left:1px solid black;\noverflow-y:auto;\n`\nexport const ContactItem = styled.li`\nmargin-top:2%;\nbordewr-left:1px solid black;\npadding-left:0.2em\n`\n\nexport const DeleteBtn = styled.div`\n    display:block;\n    text-align:center;\n    background-color:#dcaaaa;\n    font-size:35%;\n    border-radius:10em;\n    \n    &:hover{\n        background-color:#ee4444;\n        border: 1px solid #aa0000\n    }\n`","import { createSlice, configureStore, nanoid } from '@reduxjs/toolkit'\nimport { Provider } from 'react-redux';\n\nconst templateContacts=[\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\n  ]\nconst initialState=templateContacts//localStorage.getItem('contactList');\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState:initialState,\n  reducers: {\n    addContact: {\n        reducer: (state,action)=>{\n            // console.log('action:',action,'','state:',current(state));\n            if(action.payload) state.push(action.payload);\n        },\n        prepare:(contact)=>{\n            const id=nanoid();\n            if (typeof(contact)!=='object' || !contact.name || (!contact.value && !contact.number)) return {payload:null}\n            return {payload:{id,name:contact.name,number:contact.number || contact.value}}\n        }\n    },\n    deleteContact: (state,action) => {\n        // console.log(action)\n        return state.filter((contact)=>contact.id!==action.payload.id);\n    },\n    setTemplateContacts: (state)=>{\n        // console.log('setting, state before:',current(state))\n        return templateContacts\n    },\n    deleteAllContacts:(state)=>{\n        // console.log('deleting, state before:',current( state))\n        return ([])\n    }\n  }\n})\n\nexport const { addContact,deleteContact,setTemplateContacts,deleteAllContacts } = contactsSlice.actions\n\nconst store = configureStore({\n  reducer: {contacts:contactsSlice.reducer}\n})\n\nexport const ReduxProvider = ({children})=>(\n    <Provider store={store}>\n        {children}\n    </Provider>\n)","import React, { useState } from 'react'\nimport { addContact } from 'hw-06-phonebook/Reducer';\nimport { useDispatch } from 'react-redux';\n\nimport { FormButton, FormInput, FormLabel } from 'hw-02-phonebook/styles/AddContactForm.styled';\nexport default function AddContactForm() {\n  const [name,setName]=useState('');\n  const [number,setNumber]=useState('');\n  const dispatch=useDispatch();\n  //program does not need controlled inputs here, but task does\n  function submitForm(){\n    dispatch(addContact({name,number}));\n  }\n\n  return (\n    <form onSubmit={(e)=>{e.preventDefault();submitForm();}}>\n      <div>\n      <FormLabel htmlFor='acf-name'>Ім'я контакту</FormLabel>\n      <FormInput\n        id='acf-name'\n        value={name}\n        onChange={(event)=>(setName(event.target.value))}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      </div>\n      <div>\n      <FormLabel htmlFor='acf-num'>Телефонний номер</FormLabel>\n      <FormInput\n        id='acf-num'\n        value={number}\n        onChange={(event)=>(setNumber(event.target.value))}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      </div>\n      <FormButton type='submit'>Додати контакт</FormButton>\n    </form>\n  )\n}\n","import React, {  useState } from 'react'\nimport { deleteAllContacts, deleteContact, setTemplateContacts } from 'hw-06-phonebook/Reducer';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ContactItem, ContactList, DeleteBtn } from 'hw-02-phonebook/styles/ContactDisplay.styled';\nimport { FormButton, FormInput } from 'hw-02-phonebook/styles/AddContactForm.styled';\n\nexport default function DisplayContacts() {\n  const [filter,setFilter]=useState('');\n  const dispatch=useDispatch();\n  // let contacts=[];\n  function checkItem(item){\n    if (item.name.toUpperCase().includes(filter)) return true;\n    if (item.number.toString().includes(filter)) return true;\n    return false;\n  }\n  function setTemplateContactsLocal(){dispatch(setTemplateContacts());}\n  function deleteContactLocal(id){dispatch(deleteContact({id:id}))}\n  function deleteAllContactsLocal(){dispatch(deleteAllContacts())}\n  \n  let contacts=useSelector(state=>state.contacts);\n  // console.log(st);\n  return (\n    <div>\n      <FormInput\n        type='text' \n        value={filter} \n        placeholder='find a contact'\n        onChange={(e)=>setFilter(e.target.value.toUpperCase())}\n      />\n      <div style={{display:'flex'}}>\n        <FormButton onClick={setTemplateContactsLocal}>Set template contacts</FormButton>\n        <FormButton onClick={deleteAllContactsLocal}>Remove all contacts</FormButton>\n      </div>\n      <ContactList>\n        {contacts.filter(checkItem).map(({id,name,number})=>(\n          <ContactItem key={id}>\n            {name}:  {number}\n            <DeleteBtn onClick={()=>deleteContactLocal(id)}>Delete</DeleteBtn>\n          </ContactItem>\n        ))}\n      </ContactList>\n    </div>\n  )\n}","import Section from 'generalComponents/Section'\nimport { ReduxProvider } from './Reducer'\nimport AddContactForm from './components/AddContactForm'\nimport DisplayContacts from './components/DisplayContacts'\n\nimport React from 'react'\n\nexport default function App() {\n\n  return (\n    <ReduxProvider>\n    <Section type='task' title='Книга контактів'>\n      <Section label='Add contact'>\n        <AddContactForm/>\n      </Section>\n      <Section label='Contact list'>\n        <DisplayContacts/>\n      </Section>\n    </Section>\n    </ReduxProvider>\n  )\n}\n"],"names":["FormLabel","styled","FormInput","FormButton","ContactList","ContactItem","DeleteBtn","templateContacts","id","name","number","initialState","contactsSlice","createSlice","reducers","addContact","reducer","state","action","payload","push","prepare","contact","nanoid","value","deleteContact","filter","setTemplateContacts","deleteAllContacts","actions","store","configureStore","contacts","ReduxProvider","children","AddContactForm","useState","setName","setNumber","dispatch","useDispatch","onSubmit","e","preventDefault","htmlFor","onChange","event","target","type","pattern","title","required","DisplayContacts","setFilter","useSelector","placeholder","toUpperCase","style","display","onClick","item","includes","toString","map","deleteContactLocal","App","Section","label"],"sourceRoot":""}